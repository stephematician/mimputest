% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/complete_rows.R
\name{complete_rows}
\alias{complete_rows}
\title{Complete a data set using replicates of incomplete rows.}
\usage{
complete_rows(
  result,
  k = result$n,
  to_complete = rownames(result$model),
  replace = FALSE
)
}
\arguments{
\item{result}{list (named, class 'mimputest'): a collection of imputed data
sets of missing values in the format returned by \code{\link[=mimputest]{mimputest()}}.}

\item{k}{integer: the number of replications of each incomplete row to
generate and then fill missing values in; the default is the number of sets
in \code{result}.}

\item{to_complete}{character: the names of the variables with missing values
to include when identifying rows to replicate and complete; the default is
all variables with one or more missing value.}

\item{replace}{logical: indicator of sampling with replacement (\code{TRUE}) or
not (\code{FALSE}), default is sample \emph{without} replacement.}
}
\value{
Data set in long format with the non-replicated rows (that were
complete in the original data) and the newly completed replicated rows. Two
columns are added to the data; \code{.sampler} and \code{.rep}. Both are integers that
describe which sampler the values in the (replicated) row were taken from
(i.e. which set in \code{result} was used for the row) and which replicate data
set the row belongs to. The non-replicated rows have values \code{NA_integer_} for
\code{.rep} and \code{.sampler}.
}
\description{
A 'bad' (occasionally useful) approach to analysis with multiply imputed
data is to construct a data set with the completely observed rows and
replicates of the rows with missing values filled with values from data
sets generated via multiple imputation; the replicate rows are then weighted
to their original count. This function constructs a data set like this using
the output of \code{\link[=mimputest]{mimputest()}}. A weighted analysis can then be performed on the
newly completed data set.
}
\details{
The best practise in analysing multiply imputed data is to analyse each
data set separately and pool the results using Rubin's or other rules. This
pattern can be done via the \code{\link[=with]{with()}} and \code{\link[mice:pool]{mice::pool()}} functions. Output
from \code{\link[=mimputest]{mimputest()}} \emph{can} be passed to these functions by first converting it
via \code{\link[=as_mids]{as_mids()}}. On the other hand, some analyses do not fit this pattern, or
repeating analyses \code{n} times is inconvenient, and so a 'wrong' approach might
be more practical: generate a new dataset, to be analysed once, where each
incompletely observed row is replicated one or more times, assigned some
imputed values, and weighted to its original count.

This function takes the original data set, extracts the completely and
incompletely observed rows, then replicates the incompletely observed rows.
The values for each replicate are taken from a randomly selected imputed data
set (i.e. sampler), using the value returned by \code{\link[=mimputest]{mimputest()}}. Two columns
are added to indicate which sampler (or imputed data set) the values were
taken from for the row, and which replicate number was assigned to the row.
The final data set can be analysed once provided appropriate weighting is
assigned to replicate rows by the user (replicate rows can be identified by
non-\code{NA} values for the replicate number).
}
\seealso{
\code{\link[=mimputest]{mimputest()}} \code{\link[mice:pool]{mice::pool()}}
}
